{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-RG-DEV01"
		},
		"GitHub_ETL_DATA_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'GitHub_ETL_DATA'"
		},
		"LS_abls_buyalot_webstore_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_abls_buyalot_webstore'"
		},
		"LS_adls_data_engineering__accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_adls_data_engineering_'"
		},
		"LS_asql_data_engineering_metadata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_asql_data_engineering_metadata'"
		},
		"GitHub_ETL_DATA_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "vinhreal1996@gmail.com"
		},
		"LS_adls_data_engineering__properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagedatalakedev01.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GitHub_ETL_DATA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection GitHub",
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('GitHub_ETL_DATA_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('GitHub_ETL_DATA_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIkRBVEFGQUNUT1JZQDYxRkUwMjI3LURBMEYtNENDMS1COENBLUM3MDNCNThFOEQ1Nl83NDQ4NDg1Zi1kZjllLTQ1MTYtYTc4OS03MDM1YzVmMDJjYzMiDQp9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_abls_buyalot_webstore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to the Buyalot Website Data",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_abls_buyalot_webstore_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_adls_data_engineering_')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to the Data Engineering Data lake",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_adls_data_engineering__properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_adls_data_engineering__accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_asql_data_engineering_metadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to the Metadata database",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_asql_data_engineering_metadata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_abls_buyalot_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_abls_buyalot_webstore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Webstore"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "onlinesales.json",
						"container": "sales"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"SalesOrderNumber": {
							"type": "string"
						},
						"SalesOrderLineNumber": {
							"type": "integer"
						},
						"RevisionNumber": {
							"type": "integer"
						},
						"OrderQuantity": {
							"type": "integer"
						},
						"ProductCode": {
							"type": "string"
						},
						"PromotionsCode": {
							"type": "integer"
						},
						"CurrencyCode": {
							"type": "string"
						},
						"UnitPrice": {
							"type": "number"
						},
						"ExtendedAmount": {
							"type": "number"
						},
						"UnitPriceDiscountPct": {
							"type": "number"
						},
						"DiscountAmount": {
							"type": "number"
						},
						"ProductStandardCost": {
							"type": "number"
						},
						"TotalProductCost": {
							"type": "number"
						},
						"SalesAmount": {
							"type": "number"
						},
						"TaxAmt": {
							"type": "number"
						},
						"Freight": {
							"type": "number"
						},
						"CustomerCode": {
							"type": "string"
						},
						"Region": {
							"type": "string"
						},
						"Country": {
							"type": "string"
						},
						"OrderDate": {
							"type": "string"
						},
						"DueDate": {
							"type": "string"
						},
						"ShipDate": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_abls_buyalot_webstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_adls_data_engineering_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adls_data_engineering_",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "webstore/raw/onlinesales",
						"fileSystem": "webdevelopmeent"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adls_data_engineering_')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_asql_email_address')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_asql_data_engineering_metadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SystemCode",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "SystemInfoID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EmailRecipients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_asql_data_engineering_metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest webstore Online Sales data in to Datalake",
				"activities": [
					{
						"name": "Copy Webstore Online Sales data",
						"description": "Copy webstore Online Sales data in to Datalake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-06T09:50:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest webstore Online Sales data in to Datalake",
				"activities": [
					{
						"name": "Copy Webstore Online Sales data",
						"description": "Copy webstore Online Sales data in to Datalake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email",
						"description": "Send Email notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy Webstore Online Sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-17.northcentralus.logic.azure.com:443/workflows/0f0a4b5f13574610b61408c9e4044a18/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=MBeO71InCTsYsGSReophEW_TS6vkGVsWdcaPO2MR_Y4",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@json(concat('{\n\"emailAddress\":\"vinhleo1996@gmail.com\",\n\"subject\":\"ADF Pipeline (PL_data_ingestion_json)\",\n\"messageBody\":\"ingestion of Web store Data into the Data lake has completed successfully\"\n}'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-06T09:50:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_util_send_email_notifications')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is a utility pipeline that sends email notifications",
				"activities": [
					{
						"name": "Get Email Address",
						"description": "Gets the Email Recipients for a specific system code and dataset name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetEmailAddresses]",
								"storedProcedureParameters": {
									"DatasetName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.datasetName",
											"type": "Expression"
										}
									},
									"SystemCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.systemCode",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_asql_email_address",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Email Address",
						"description": "Send a message to each email address",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Email Address",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Email Address').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Send Email",
									"description": "Send Email notification",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-17.northcentralus.logic.azure.com:443/workflows/0f0a4b5f13574610b61408c9e4044a18/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=MBeO71InCTsYsGSReophEW_TS6vkGVsWdcaPO2MR_Y4",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@json(concat('{\n\"emailAddress\":\"',item().emailAddress,'\",\n\"subject\":\"ADF Pipeline (PL_data_ingestion_json)\",\n\"messageBody\":\"ingestion of Web store Data into the Data lake has completed successfully\"\n}'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					}
				},
				"folder": {
					"name": "utility"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-06T14:22:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_asql_email_address')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest webstore Online Sales data in to Datalake",
				"activities": [
					{
						"name": "Copy Webstore Online Sales data",
						"description": "Copy webstore Online Sales data in to Datalake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy Webstore Online Sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_util_send_email_notifications",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-06T14:49:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]",
				"[concat(variables('factoryId'), '/pipelines/PL_util_send_email_notifications')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest webstore Online Sales data in to Datalake",
				"activities": [
					{
						"name": "Copy Webstore Online Sales data",
						"description": "Copy webstore Online Sales data in to Datalake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Log Pipeline Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_util_send_email_notifications",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log Pipeline Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Webstore Online Sales data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineLog]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertFromUtc(utcnow(),'SE Asia Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().parameters.runID",
										"type": "Expression"
									},
									"type": "String"
								},
								"SnapshotDate": {
									"value": {
										"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceToTargetID": {
									"value": {
										"value": "2",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartTime": {
									"value": {
										"value": "@convertFromUtc(pipeline().TriggerTime,'SE Asia Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "Sucess",
										"type": "Expression"
									},
									"type": "String"
								},
								"UpdateAt": {
									"value": {
										"value": "@{formatDateTime(convertfromutc(addDays(utcNow(),-1),'SE Asia Standard Time'), 'yyyy-MM-dd' )}",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_asql_data_engineering_metadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2022-03-06"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-06T15:26:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]",
				"[concat(variables('factoryId'), '/pipelines/PL_util_send_email_notifications')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_asql_data_engineering_metadata')]"
			]
		}
	]
}